@startuml
participant Core
participant ServiceLoader
participant IObserver
participant EventBroker

activate Core
Core -> ServiceLoader: load(IObserver.class)
activate ServiceLoader
note right of ServiceLoader: ServiceLoader returns an iterable Object of classes that implement IObserver
ServiceLoader --> Core: ServiceLoader<IObserver>
deactivate ServiceLoader
loop for each IObserver
    Core -> IObserver: getTopics()
    activate IObserver
    IObserver --> Core: List<EventType>
    deactivate IObserver
    Core -> EventBroker: addObserver(topics, observer)
    activate EventBroker
    EventBroker --> Core: void
    deactivate EventBroker
end
deactivate Core
note right of Core: ServiceLoader has added all IObserver instances to EventBroker which will be notified when an event is published\nwith the EventType that they have subscribed to
@enduml